<?xml version="1.0" encoding="UTF-8"?>
<?page id="browse_folder_jobs"?>
<zk>
<zscript src="../alsglobal/alsglobaldefs.zs" />
<zscript src="../alsglobal/globfuncs_ng.zs" />
<zscript src="../alsglobal/globsqlfuncs_ng.zs" />
<zscript src="../alsglobal/uploadedWorksheet_v2.zs" />
<zscript src="../alsglobal/formMaker_v2.zs" />
<zscript src="../alsglobal/doculink_funcs.zs" />
<zscript src="../alsglobal/emailfuncs.zs" />
<zscript src="../alsglobal/repeatstuff.zs" />
<zscript src="../alsglobal/samplereg_funcs.zs" />
<zscript src="../alsglobal/searchSelectCustomer_v1.zs" />
<zscript src="./foldbrowser/fbwmisc.zs" />
<zscript src="./foldbrowser/listfolders.zs" />
<zscript>
<![CDATA[
MYTITLE = "Folders/Jobs Browser";
MYVERSION = "v4.0";
MYPANEL = "folderbrowse_panel";
/*
Title: Folders browser
Written by: Victor Wong

**NOTES**
16/07/2014: optimization and recode
21/06/2013: column to show per-sample share_sample thing
13/05/2013: filter by jobfolders.track_flag
01/04/2013: remove update jobfolders.srngenerate_date when user just want to print-SRA
30/03/2013: search for ASMA by project-types folders
05/09/2012: add "COA diterima" button / show results entered via formkeeper / optimization
16/10/2011: recode some sections - optimization
03/08/2011: admin-stuff, change folder assigned customer to another..
01/06/2011: added dig by salesman
22/02/2011: job-notes stuff added - bump-up to version 2.5
07/01/2011: added func to allow user to change shared-sample flag
30/09/2010: added search by folder-number - added folder->samples->tests breakdown tree

*/

import java.util.*;
import java.text.*;
import java.io.*;

import groovy.sql.Sql;
import org.zkoss.zk.ui.*;
import org.zkoss.util.media.AMedia;

import org.apache.poi.poifs.filesystem.POIFSFileSystem;
import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFPrintSetup;

import org.victor.*;
sechand = new SecurityFuncs();
myincludeid = Executions.getCurrent().getParameter("myid");
useraccessobj = sechand.getUserAccessObject();
if(useraccessobj == null) Executions.sendRedirect(MAINLOGIN_PAGE);

kiboo = new Generals(); lbhand = new ListboxHandler(); gridhand = new GridHandler(); sqlhand = new SqlFuncs();
guihand = new GuiFuncs(); samphand = new SampleReg(); luhand = new LookupFuncs(); ngfun = new NGfuncs();

public class folderListObject
{
	public String origid;
	public String folderno_str;
	public String ar_code;
	public String customer_name;
	public int overdue; // 1=wip and not overdue, 2=overdue and in wip, 3=released
}

last_foldersearch_type = 0;
global_selected_arcode = global_selected_folderno = "";
selected_folderno = ""; // used by repeatstuff.zs
global_selected_origid = global_selected_customername = "";

ArrayList mainFolderList;
Object prevSelectedFolder = null;
String prevSelectedFolder_style = "";

foldermeta_area_toggler = foldermeta_loaded = false;

documentLinkObj documentLinkProp = new documentLinkObj();

vicFormMaker glob_cashdetform = null;
CASHDETAIL_FORM_ID = "11";

//--- to be used in searchSelectCustomer_v1.zs
class CallMeObject
{
	public Object companyrec;
	public Object callme;

	void doSomething()
	{
		if(companyrec == null) return;
		// codes knock-off from pickCustomerDi() - change job-folder customer ar-code by admin
		if(!lbhand.check_ListboxExist_SelectItem(foundcustomer_holder,"customers_lb")) return;
		if(global_selected_origid.equals("")) return;

		forigid = global_selected_origid;
		iar_code = companyrec.get("ar_code");
		todate = kiboo.getDateFromDatebox(hiddendatebox);

		sqlstm = "update jobfolders set ar_code='" + iar_code + "', " + 
		"cashconvertdate='" + todate + "', cashconvertuser='" + useraccessobj.username + "' where origid=" + forigid;
		sqlhand.gpSqlExecuter(sqlstm);
		selectcustomer_popup.close();

		loadFoldersList(last_foldersearch_type); // refresh
	}
}

local_callme = new CallMeObject();
//---

void showTestAssigned(String iorigid)
{
	// remove previous grid
	if(foldertests_holder.getFellowIfAny("samplesgrid") != null) samplesgrid.setParent(null);

	sqlstm = "select js.origid as js_origid, js.sampleid_str, js.samplemarking, js.asma_id, js.asma_station, jf.folderno_str " +
	"from jobfolders jf left join jobsamples js on js.jobfolders_id = jf.origid " +
	"where jf.origid=" + iorigid + " and jf.deleted = 0 and js.deleted = 0";

	sql = sqlhand.als_mysoftsql();
	if(sql == null) return;

	// grab samples + marking
	therows = sql.rows(sqlstm);

	if(therows.size() == 0) {sql.close(); return;}

	thegrid = new Grid();
	thegrid.setId("samplesgrid");

	gridrows = gridhand.gridMakeRows("","",thegrid);
	testgrid_count = 1;

	mainEntryList = new ArrayList();
	
	// get distinct test(mysoftcode) assigned and description, to speed-up through hashtable
	sqlstm4 = "select distinct jtp.mysoftcode, smd.description " +
			"from jobtestparameters jtp " +
			"left join jobsamples js on jtp.jobsamples_id = js.origid " +
			"left join jobfolders jf on js.jobfolders_id = jf.origid " +
			"left join stockmasterdetails smd on smd.id = jtp.mysoftcode " +
			"where jf.origid=" + iorigid;

	testdesclist = sql.rows(sqlstm4);
	Hashtable testdescriptions = new Hashtable();
	if(testdesclist.size() > 0)
	{
		for(tpi : testdesclist)
		{
			testdescriptions.put(tpi.get("mysoftcode").toString(),kiboo.checkNullString(tpi.get("description")));
		}
	}

	for(dpi : therows)
	{
		//sampleid_row = gridMakeRow("","background-color:#333333","",gridrows);
		sampleid_row = gridhand.gridMakeRow("","background-color:#333333","",gridrows);

		//makeLabelToParent(testgrid_count.toString() + ".","color:#ffffff",sampleid_row);
		gridhand.makeLabelToParent(dpi.get("js_origid").toString(),"color:#ffffff;font-weight:bold",sampleid_row);
		gridhand.makeLabelToParent(dpi.get("sampleid_str"),"color:#ffffff;font-weight:bold",sampleid_row);

		samplemarking_row = gridhand.gridMakeRow("","","",gridrows);

		gridhand.makeLabelToParent("Sample marking","",samplemarking_row);
// TODO: 19/09/2012 for ENV clients - project-id field..
		// 13/10/2011: if ASMA samples, show sample-id and station
		asmaextrainfo = "";
		if(global_selected_arcode.equals("300A/008"))
			asmaextrainfo = " [ ASMA-ID: " + kiboo.checkNullString(dpi.get("asma_id")) + " Station: " + kiboo.checkNullString(dpi.get("asma_station")) + " ]";

		gridhand.makeLabelToParent(dpi.get("samplemarking") + asmaextrainfo,"",samplemarking_row);
		//samplemarkcell.setId("SMLBL" + dpi.get("js_origid").toString());

		// show tests for sample-id
		testsrow = gridhand.gridMakeRow("","","3",gridrows);

		testsgrid = new Grid();
		testsgrid.setId("testgrid" + testgrid_count.toString()); // set ID for later usage
		testsgrid.setParent(testsrow);

		sqlstm2 = "select jtp.origid as jtp_origid, jtp.mysoftcode, jtp.assignedto, jtp.assigndate," + 
			"smd.groupcode " +
			"from jobtestparameters jtp " +
			"left join jobsamples js on jtp.jobsamples_id = js.origid " +
			"left join stockmasterdetails smd on smd.id = jtp.mysoftcode " +
			"where js.origid=" + dpi.get("js_origid").toString();

		testrecs = sql.rows(sqlstm2);
		if(testrecs.size() != 0)
		{
			testgridrows = gridhand.gridMakeRows("","",testsgrid);
			headrow = gridhand.gridMakeRow("","background:#FAD541","",testgridrows);

			gridhand.makeLabelToParent("Test","",headrow);
			gridhand.makeLabelToParent("Sect.","",headrow);
			gridhand.makeLabelToParent("Asgn.To","",headrow);
			gridhand.makeLabelToParent("Asgn.Date","",headrow);
			gridhand.makeLabelToParent("Res","",headrow);
			gridhand.makeLabelToParent("Units","",headrow);
			gridhand.makeLabelToParent("Keyin","",headrow);
			gridhand.makeLabelToParent("K.Date","",headrow);

			for(kpi : testrecs)
			{
				if(kpi.get("mysoftcode") != 0)
				{
					tprow = gridhand.gridMakeRow("","","",testgridrows);
					//tprow.addEventListener("onClick", new testRowOnClick());

					//makeLabelToParent(kpi.get("description"),"",tprow);
					gridhand.makeLabelToParent(testdescriptions.get(kpi.get("mysoftcode").toString()),"",tprow); // use Hashtable - to speedup
					gridhand.makeLabelToParent(kpi.get("groupcode"),"",tprow);
					gridhand.makeLabelToParent(kiboo.checkNullString(kpi.get("assignedto")),"",tprow);

					asdatestr = "";
					asdate = kpi.get("assigndate");
					if(asdate != null) asdatestr = asdate.toString().substring(0,10);
					gridhand.makeLabelToParent(asdatestr,"",tprow);

					// get last result-entered/units if any
					sqlstm3 = "select top 1 result_unit,final,username,analysed_date from elb_chemistry_results " +
					"where jobtestparameter_id=" + kpi.get("jtp_origid").toString() + " and mysoftcode=" + kpi.get("mysoftcode").toString() + 
					"order by origid desc";

					prevrec = sql.firstRow(sqlstm3);

					if(prevrec != null)
					{
						oldres = (prevrec.get("final") == null) ? "" : prevrec.get("final");
						oldunit = (prevrec.get("result_unit") == null) ? "" : prevrec.get("result_unit");

						gridhand.makeLabelToParent(oldres,"",tprow);
						gridhand.makeLabelToParent(oldunit,"",tprow);
						gridhand.makeLabelToParent(prevrec.get("username"),"",tprow);
						gridhand.makeLabelToParent(prevrec.get("analysed_date").toString().substring(0,10),"",tprow);
					}
					else // blank previous results labels
					{
						for(i=0;i<4;i++)

						{
						gridhand.makeLabelToParent("","",tprow);
						}
					}
				}
			}
		}

		testgrid_count++;

		selected_folderno = dpi.get("folderno_str");
	}

	sql.close();
	thegrid.setParent(foldertests_holder);
	foldertests_holder.setVisible(true);
}

class foldersOnSelect implements org.zkoss.zk.ui.event.EventListener
{
	public void onEvent(Event event) throws UiException
	{
		selrow = event.getTarget();

		if(prevSelectedFolder != null)
		{
			if(prevSelectedFolder != selrow)
			{
				if(prevSelectedFolder_style.equals(""))
					prevSelectedFolder.setStyle(null);
				else
					prevSelectedFolder.setStyle(prevSelectedFolder_style);
			}
			else
				return; // selected same as previous, return - don't waste cpu
		}

		prevSelectedFolder_style = (selrow.getStyle() == null) ? "" : selrow.getStyle();
		prevSelectedFolder = selrow;
		selrow.setStyle(FOLDERPICK_COLOR);

		selid = selrow.getId();
		selid = selid.substring(2,selid.length());
		
		for(dpi : mainFolderList)
		{
			if(dpi.origid.equals(selid))
			{
				global_selected_origid = dpi.origid;
				global_selected_arcode = dpi.ar_code;
				global_selected_folderno = dpi.folderno_str;
				selected_folderno = dpi.folderno_str;
				global_selected_customername = dpi.customer_name;

				//showTestAssigned(global_selected_origid);

				foldermeta_area_toggler = false;
				foldermeta_loaded = false;
				foldermeta_area.setVisible(false);
				
				//showJobNotes(global_selected_origid);

				// folder->tests caption
				//foldercaption_lbl.setValue(global_selected_folderno);
				//companyname_lbl.setValue(global_selected_customername);

				break;
			}
		}
	}
}

String[] folderListHeaders = {
"Folder","Priority","Dated","Due","Customer","HOLD",
"SC","LC", "Subc", "SRA ","F.Status",
"LabStat", "Rel.Date", "COA.Date", "T.COA",
"Share","PerShare","Pkup",
"Brh", "PKD", };

String[] folderListHeadWidth = {
"65px","45px","55px","55px","","30px",
"35px","35px","35px","35px","50px",
"60px","55px","55px","55px",
"55px","60px","35px",
"35px","35px" };

// recoded from startFolderJobsSearch() in v2 - cleaner and uses grid instead of listbox
// itype: 1=by date and searchtext, 2=by folder no, 3=by sample id, 4=by share-sample,5=by pkd,6=by salesman, 7=by credit-term
// 8=by sample-marking, 9=by customer-category, 10=by ASMA project, 11=by track_flag, 12=by jobhold_status
// 05/09/2012: add/show Terima-COA date column
// 14/09/2012: by customer-category - req by Juelian
void loadFoldersList(int itype)
{
	last_foldersearch_type = itype;

	sdate = kiboo.getDateFromDatebox(startdate);
	edate = kiboo.getDateFromDatebox(enddate);
	searchtext = kiboo.replaceSingleQuotes(customer_tb.getValue());
	byfold = kiboo.replaceSingleQuotes(byfolder_tb.getValue());
	bysamp = kiboo.replaceSingleQuotes(bysampleid_tb.getValue());
	sharesmp = share_sample.getSelectedItem().getLabel();
	creditm = customer_terms_lb.getSelectedItem().getLabel();
	smarking = kiboo.replaceSingleQuotes(bysampmarking_tb.getValue());
	asmapo = kiboo.replaceSingleQuotes(customer_po.getValue());
	trkflag = track_flag.getSelectedItem().getLabel();
	jobhstat = jobhold_status.getSelectedItem().getLabel();

	sqlstm_head = "select top 300 jf.origid, jf.ar_code, jf.priority, jf.datecreated, jf.folderstatus, jf.branch," + 
	"jf.duedate, jf.tat, jf.folderno_str, jf.labfolderstatus, jf.pkd_samples, jf.share_sample, jf.coadate,jf.prepaid, " +
	"customer.customer_name, csci.customer_name as cashcustomer, " +
	"(select count(origid) from jobsamples where jobfolders_id = jf.origid and deleted=0) as samplecount, " +
	"jf.terimacoa_date, jf.releaseddate, jf.srngenerate_date, jf.jobhold_status, " +
	"(select count(origid) from elb_labcomments where folderno_str=jf.folderno_str) as lccount, " +
	"(select count(origid) from elb_subcon_items where folderno_str=jf.folderno_str) as subcon, " +
	"(select count(sampleid_str) from elb_labpickedsamples where sampleid_str like '____' + cast(jf.origid as varchar) + '______') as pickcount " +
	"from jobfolders jf " +
	"left join customer on customer.ar_code = jf.ar_code " +
	"left join jobsamples js on js.jobfolders_id = jf.origid " +
	"left join cashsales_customerinfo csci on csci.folderno_str = jf.folderno_str " +
	"where jf.deleted=0 and jf.folderstatus in ('" + FOLDERCOMMITED + "','" + FOLDERLOGGED + "') ";
	//"where jf.deleted=0 ";

	sqlstm_foot = "group by jf.origid, jf.ar_code, jf.datecreated, jf.priority, jf.folderstatus, jf.branch," + 
	"jf.duedate, jf.tat, jf.folderno_str, jf.labfolderstatus, jf.pkd_samples, jf.share_sample, jf.coadate, jf.jobhold_status, " +
	"customer.customer_name, csci.customer_name, jf.terimacoa_date,jf.releaseddate,jf.srngenerate_date, jf.prepaid " +
	"order by jf.datecreated desc";

	//sqlstm_foot = "order by jf.datecreated desc";

	bystext = "";
	bydate = "and jf.datecreated between '" + sdate + "' and '" + edate + "' ";
	switch(itype)
	{
		case 2:
			bydate = " ";
			bystext = "and jf.folderno_str like '%" + byfold + "%' ";
			break;

		case 3:
			bydate = " ";		
			bystext = "and js.sampleid_str like '_________%" + bysamp + "%' ";
			break;
			
		case 4:
			bystext = "and jf.share_sample='" + sharesmp + "' ";
			break;
			
		case 5:
			bystext = "and pkd_samples=1 ";
			break;
			
		case 6:
			selitem = qt_salesperson.getSelectedItem();
			salesp = lbhand.getListcellItemLabel(selitem,1);
			if(salesp.equals("None")) return;
			bystext = "and customer.salesman_code='" + salesp + "' ";
			break;
			
		case 7: // by credit-term
			bystext = "and customer.credit_period='" + creditm + "' ";
			break;
			
		case 8:
			bystext = "and js.samplemarking like '%" + smarking + "%' ";
			break;

		case 9: // by customer-category
			cstca = custcat_lb.getSelectedItem().getLabel();
			bystext = "and customer.category='" + cstca + "' ";
			break;

		case 10: // by ASMA project-types
			bystext = "and jf.customerpo='" + asmapo + "' ";
			break;

		case 11: // by track_flag
			bystext = "and jf.track_flag='" + trkflag + "' ";
			break;

		case 12: // by jobhold_status
			bystext = "and jf.jobhold_status='" + jobhstat + "' ";
			break;

		default:
			if(!searchtext.equals("")) bystext = "and (customer.customer_name like '%" + searchtext + "%' " + 
			"or csci.customer_name like '%" + searchtext + "%') ";
			break;
	}

	sqlstm = sqlstm_head + bydate + bystext + sqlstm_foot;

	therecs = sqlhand.gpSqlGetRows(sqlstm);
	if(therecs.size() == 0) { return; }

	// remove previous grid
	if(folders_searchdiv.getFellowIfAny("folders_lb") != null) folders_lb.setParent(null);

	mainFolderList = new ArrayList();

	thegrid = new Grid();
	thegrid.setId("folders_lb");

	gridrows = gridhand.gridMakeRows("","",thegrid);
	gridhand.makeGridHeaderColumns_Width(folderListHeaders,folderListHeadWidth, thegrid);

	todate = hiddendatebox.getValue();
	overduecount = 0;
	releasedcount = 0;
	jobholdcount = 0;

	for(dpi : therecs)
	{
		// Store folder metadata
		ifolder = new folderListObject();
		ifolder.origid = dpi.get("origid").toString();
		ifolder.folderno_str = dpi.get("folderno_str");
		ifolder.ar_code = dpi.get("ar_code");

		coadt = kiboo.checkNullDate(dpi.get("coadate"),"");
		if(coadt.equals("1900-01-01")) coadt = "---";

		if(dpi.get("ar_code").equals("CASH"))
			ifolder.customer_name = dpi.get("cashcustomer");
		else
			ifolder.customer_name = dpi.get("customer_name");

		// process overdue bar-color
		duedate = dpi.get("duedate");

		ifolder.overdue = 1;
		if(todate.compareTo(duedate) >= 0 && dpi.get("labfolderstatus").equals("WIP"))
			ifolder.overdue = 2;
		else
			ifolder.overdue = 3;

		overduestyle = "";
		labelstyle = "";

		switch(ifolder.overdue)
		{
			case 2:
				overduestyle = OVERDUE_ROWCOLOR;
				// 22/05/2013: req by Doc. if got coa.date , deemed as RELEASED -- 
				// haha, no results-entry still consider released.
				if(coadt.equals("---"))
				{
					labelstyle = "color:#ffffff;font-size:9px;font-weight:bold";
					overduecount++;
				}
				else
				{
					overduestyle= RELEASED_ROWCOLOR;
					labelstyle = "color:#222222;font-size:9px";
					releasedcount++;
				}
				break;
			case 3:
				if(dpi.get("labfolderstatus").equals("RELEASED"))
				{
					overduestyle= RELEASED_ROWCOLOR;
					labelstyle = "color:#222222;font-size:9px";
					releasedcount++;
				}
				break;
		}

		// 13/05/2013: check if hold/reject -- set extreme COLOR!!! hahah
		jobhstat = kiboo.checkNullString(dpi.get("jobhold_status"));
		if(jobhstat.equals("ON_HOLD") || jobhstat.equals("REJECT"))
		{
			overduestyle = HOLD_REJECT_ROWCOLOR;
			labelstyle = "color:#ffffff;font-size:10px;font-weight:bold;text-decoration:blink";
			jobholdcount++;
		}

		mainFolderList.add(ifolder);

		theid = "FR" + ifolder.origid;
		folder_row = gridhand.gridMakeRow(theid,overduestyle,"",gridrows);
		//folder_row.setStyle("background:#AA0000");
		folder_row.addEventListener("onClick", new foldersOnSelect());

		gridhand.makeLabelToParent(dpi.get("folderno_str"),labelstyle,folder_row);

		// 14/01/2013: show jobfolders.priority
		lcstyle = labelstyle;
		prty = dpi.get("priority");
		if(!prty.equals("NORMAL")) lcstyle="font-size:9px;background:#ff0000;color:#eeeeee";
		gridhand.makeLabelToParent(dpi.get("priority"),lcstyle,folder_row);

		gridhand.makeLabelToParent(dpi.get("datecreated").toString().substring(0,10),labelstyle,folder_row);
		gridhand.makeLabelToParent(dpi.get("duedate").toString().substring(0,10),labelstyle,folder_row);

		icompanyname = "Undefined";
		iar_code = dpi.get("ar_code");

		if(iar_code != null)
		{
			iar_code = iar_code.toUpperCase().trim();

			if(iar_code.equals("CASH") || iar_code.equals("CASH USD") || iar_code.equals("300S-550"))
			{
				icompanyname = "CshAcct: ";
				if(iar_code.equals("300S-550")) // syabas contractor
					icompanyname = "Syabas: ";

				if(dpi.get("cashcustomer") != null)
					icompanyname += dpi.get("cashcustomer");
				else
					icompanyname += "UNKNOWN";
			}
			else
				icompanyname = kiboo.checkNullString_RetWat(dpi.get("customer_name"),"Undefined");
		}

		gridhand.makeLabelToParent(icompanyname,labelstyle,folder_row);

		// 13/05/2013: jobhold_status
		gridhand.makeLabelToParent(jobhstat,labelstyle,folder_row);

		gridhand.makeLabelToParent(dpi.get("samplecount").toString(),labelstyle,folder_row);

		// 14/01/2013: show lab-comment and subcon count
		lcstyle = "";
		if(dpi.get("lccount") > 0) lcstyle = "background:#1e90ff;color:#eeeeee";
		gridhand.makeLabelToParent(dpi.get("lccount").toString(),lcstyle,folder_row);

		lcstyle = "";
		if(dpi.get("subcon") > 0) lcstyle = "background:#a52a2a;color:#eeeeee";
		gridhand.makeLabelToParent(dpi.get("subcon").toString(),lcstyle,folder_row);

		gridhand.makeLabelToParent(kiboo.checkNullDate(dpi.get("srngenerate_date"),"---") ,labelstyle,folder_row);

		gridhand.makeLabelToParent(dpi.get("folderstatus"),labelstyle,folder_row);
		gridhand.makeLabelToParent(kiboo.checkNullString(dpi.get("labfolderstatus")),labelstyle,folder_row);

		reldt = kiboo.checkNullDate(dpi.get("releaseddate"),"");
		if(reldt.equals("1900-01-01")) reldt = "---";
		gridhand.makeLabelToParent(reldt,labelstyle,folder_row);

		gridhand.makeLabelToParent(coadt,labelstyle,folder_row);

		gridhand.makeLabelToParent(kiboo.checkNullDate(dpi.get("terimacoa_date"),""),labelstyle,folder_row);

		gridhand.makeLabelToParent(kiboo.checkNullString_RetWat(dpi.get("share_sample"),"---"),labelstyle,folder_row);

		//prpd = (dpi.get("prepaid") == null) ? "" : (dpi.get("prepaid") == 0) ? "---" : "-Y-";

		// 21/06/2013: per-sample share_sample column
		psstr = getPerSampleShareSample(ifolder.origid);
		gridhand.makeLabelToParent(psstr,labelstyle,folder_row);

		gridhand.makeLabelToParent(dpi.get("pickcount").toString(),labelstyle,folder_row);
		gridhand.makeLabelToParent(dpi.get("branch"),labelstyle,folder_row);
		pkdwop = "---";
		if(dpi.get("pkd_samples") != null) pkdwop = (dpi.get("pkd_samples") == 0) ? "---" : "-Y-";
		gridhand.makeLabelToParent(pkdwop,labelstyle,folder_row);

	}

	numofsamples_lbl.setValue(therecs.size().toString());
	overdue_count_lbl.setValue(overduecount.toString());
	released_count_lbl.setValue(releasedcount.toString());
	wip_lbl.setValue((therecs.size()-releasedcount).toString());
	jobhold_count_lbl.setValue(jobholdcount.toString());

	thegrid.setParent(folders_searchdiv);

	folderworkbutts.setVisible(true);
	folderworkarea.setVisible(true);
}

// 05/09/2012: consolidate some funcs into this one
// itype: 1=change share-sample flag, 2=toggle PKD flag, 3=print draft report, 4=print SRA, 5=show folder details
// 6= terima COA, 7=clear terima-coa, 8=view results popup, 9=clear srn-generate date
// 10=toggle pre-paid flag
void generalFunc(int itype)
{
	boolean refresh = false;
	String sqlstm = "";
	todate = kiboo.todayISODateString();

	if(global_selected_origid.equals("")) return;

	switch(itype)
	{
		case 1:
			newss = share_sample2.getSelectedItem().getLabel();
			sqlstm = "update JobFolders set share_sample='" + newss + "' where origid=" + global_selected_origid;
			refresh = true;
			break;

		case 2:
			sqlstm = "update jobfolders set pkd_samples=1-pkd_samples where origid=" + global_selected_origid;
			refresh = true;
			break;

		case 4:
			// 14/09/2012: save print-SRA date - always today
			//sqlstm = "update jobfolders set srngenerate_date='" + todate + "' where origid=" + global_selected_origid;
			//refresh = true;
			printSRA(global_selected_folderno);
			break;

		case 3:
		case 5:
			theparam = (itype == 5) ? "folderno=" + global_selected_folderno : "folder_no=" + global_selected_origid;
			workfn = (itype == 5) ? "samplereg/folderjobs_driller.zul" : "lab/print_drafttemplate.zul";
			uniqwindowid = kiboo.makeRandomId("ldx");
			guihand.globalActivateWindow(mainPlayground,"miscwindows",workfn, uniqwindowid, theparam, useraccessobj);
			break;

		case 6: // terima COA
			sqlstm = "update jobfolders set terimacoa_by='" + useraccessobj.username + "', terimacoa_date='" + todate + "' " +
			"where origid=" + global_selected_origid;
			refresh = true;
			break;

		case 7: // clear sudah-terima
			sqlstm = "update jobfolders set terimacoa_by=null, terimacoa_date=null where origid=" + global_selected_origid;
			refresh = true;
			break;

		case 8:
			showTestAssigned(global_selected_origid);
			foldercaption_lbl.setValue(global_selected_folderno + " :: ");
			companyname_lbl.setValue(global_selected_customername);
			viewresults_popup.open(wip_lbl);
			break;
			
		case 9: // clear SRN-generate date
			sqlstm = "update jobfolders set srngenerate_date=null where origid=" + global_selected_origid;
			refresh = true;
			break;

		case 10: // toggle pre-paid
			sqlstm = "update jobfolders set prepaid=1-prepaid where origid=" + global_selected_origid;
			refresh = true;
			break;

		case 11: // email SRA directly -- new window module
			theparam = "fn=" + global_selected_origid;
			guihand.globalActivateWindow(mainPlayground,"miscwindows","samplereg/autoEmailSRA_v1.zul",
				kiboo.makeRandomId("esr"), theparam, useraccessobj);
			break;

		case 12: // 13/05/2013: set jobhold_status flag
			jhst = set_jobhold_status.getSelectedItem().getLabel();
			sqlstm = "update jobfolders set jobhold_status='" + jhst + "' where origid=" + global_selected_origid;
			refresh = true;
			break;
	}

	if(!sqlstm.equals("")) sqlhand.gpSqlExecuter(sqlstm);
	if(refresh) loadFoldersList(last_foldersearch_type);
}

// 21/06/2013: show per-sample share_sample popup
void viewPerSampleShare()
{
	Object[] samples_lb_headers = {
		new listboxHeaderWidthObj("origid",false,""),
		new listboxHeaderWidthObj("##",true,"15px"),
		new listboxHeaderWidthObj("SampleID",true,"30px"),
		new listboxHeaderWidthObj("Samp.Marking",true,""),
		new listboxHeaderWidthObj("Share",true,"30px"),
		new listboxHeaderWidthObj("Conts",true,"30px"),
	};

	glob_persampleshare_selected = ""; // always this reset glob-var

	sqlstm = "select top 300 origid,sampleid_str,samplemarking,bottles,share_sample from JobSamples " + 
	"where jobfolders_id=" + global_selected_origid +
	" and deleted=0 order by origid";

	tlist = sqlhand.gpSqlGetRows(sqlstm);
	Listbox newlb = lbhand.makeVWListbox_Width(persampsha_holder, samples_lb_headers, "persampshr_lb", 5);
	if(tlist.size() == 0) return;
	newlb.setRows(15);
	newlb.addEventListener("onSelect", new persampleshr_onclick());
	smpcount = 1;
	ArrayList kabom = new ArrayList();
	for(ilist : tlist)
	{
		bottl = (ilist.get("bottles") == null) ? "-" : ilist.get("bottles").toString();
		kabom.add(ilist.get("origid").toString());
		kabom.add(smpcount.toString() + ".");
		kabom.add(ilist.get("sampleid_str"));
		kabom.add(lbhand.trimListitemLabel(ilist.get("samplemarking"),50));
		kabom.add(kiboo.checkNullString(ilist.get("share_sample")));
		kabom.add(bottl);
		lbhand.insertListItems(newlb,kiboo.convertArrayListToStringArray(kabom),SAMPLES_PREFIX,"");
		kabom.clear();
		smpcount++;
	}
	
	persampleshare_popup.open(picksamp_butt);
}

void changePerSampleShare()
{
	if(glob_persampleshare_selected.equals("")) return;
	ppst = persampshare.getSelectedItem().getLabel();
	sqlstm = "update jobsamples set share_sample='" + ppst + "' where origid=" + glob_persampleshare_selected;
	sqlhand.gpSqlExecuter(sqlstm);
	viewPerSampleShare(); // refresh
}

]]>
</zscript>

<popup id="persampleshare_popup">
	<div id="persampsha_holder" width="500px" />
	<separator height="3px" />
	<hbox>
		<label value="Per-sample share" sclass="k9" />
		<listbox id="persampshare" sclass="k9" mold="select" />
		<button label="Change" sclass="k9" onClick="changePerSampleShare()" />
	</hbox>
</popup>

<popup id="samplepick_popup">
	<grid>
		<rows>
			<row>
				<label value="Pickup#" sclass="k9" />
				<label id="s_pickorigid" sclass="k9" />
				<label value="DateTime" sclass="k9" />
				<label id="s_timestmp" sclass="k9" />
			</row>
			<row spans="1,3">
				<label value="Pickup by" sclass="k9" />
				<label id="s_username" sclass="k9" />
			</row>
			<row spans="1,3">
				<label value="Released by" sclass="k9" />
				<label id="s_pickupperson" sclass="k9" />
			</row>
		</rows>
	</grid>
	<div id="sampickup_holder" width="250px" />
</popup>

<popup id="digquotation_popup">
	<div sclass="shadowbox" style="background:#1e90ff" width="520px">
		<hbox>
			<label value="QT" sclass="k9" />
			<textbox id="digquote_tb" sclass="k9" />
			<button label="Dig" sclass="k9" onClick="digShowQuotation()" />
			<button label="X Close" sclass="k9" onClick="digquotation_popup.close()" />
		</hbox>
		<separator height="3px" />
		<div id="quotation_workarea" visible="false">
			<grid>
				<rows>
					<row>
						<label value="Quote Ref#" sclass="k9" />
						<label id="qt_num" sclass="k9" />
						<label value="Dated" sclass="k9" />
						<label id="qt_datecreated" sclass="k9" />
					</row>
					<row spans="1,3">
						<label value="Customer" sclass="k9" />
						<label id="qt_customer_name" sclass="k9" />
					</row>
					<row>
						<label value="Quoter" sclass="k9" />
						<label id="qt_username" sclass="k9" />
						<label value="Salesperson" sclass="k9" />
						<label id="qt_sales" sclass="k9" />
					</row>
				</rows>
			</grid>
			<separator height="3px" />
			<div id="quoteitems_holder" />
		</div>
	</div>
</popup> <!-- ENDOF digquotation_popup -->

<popup id="labcomment_popup">
	<div width="560px" sclass="shadowbox" style="background:#1e90ff">
		<div style="background:#4d4d4d;padding:2px">
			<label value="Internal Lab Comments (LC)" style="color:#eeeeee" />
		</div>
		<separator height="3px" />
		<div id="lc_holder" />
		<separator height="3px" />
		<grid>
			<rows>
				<row>
					<label value="Lab comment" sclass="k9" />
					<textbox id="lc_entry" sclass="k9" multiline="true" width="99%" height="60px" />
				</row>
				<row spans="2">
					<hbox>
						<button id="savelc_btn" label="Save comment" sclass="k9" onClick="labcommentFunc(self)" />
						<button id="clearlc_btn" label="Clear text" sclass="k9" onClick="labcommentFunc(self)" />
						<button label="X Close" sclass="k9" onClick="labcomment_popup.close()" />
						<label sclass="k9">
						(SUBMIT ONLY something that make sense to a job-folder)
						</label>
					</hbox>
				</row>
			</rows>
		</grid>
	</div>
</popup>

<popup id="subcon_popup">
	<div width="480px" sclass="shadowbox" style="background:#e1721e;">
		<grid>
			<rows>
				<row spans="4" style="background:#4d4d4d">
				<label style="color:#eeeeee">
				Subcontract Request
				</label>
				</row>
				<row>
					<label value="Req#" />
					<label id="sc_origid" />
					<label value="Dated" />
					<label id="sc_datecreated" />
				</row>
				<row>
					<label value="Subcon Lab" />
					<label id="sc_subcon_name" />
					<label value="Req. by" />
					<label id="sc_username" />
				</row>
			</rows>
		</grid>
		<separator height="3px" />
		<div id="subcon_holder" />
	</div>
	<separator height="5px" />
	<button label="X Close" sclass="k9" onClick="subcon_popup.close()" />
</popup>

<popup id="jobnotes_history_popup"> <!-- Job notes related popup -->
	<groupbox width="400px">
		<caption label="Job Notes History" />
		<div style="padding:3px">
			<div id="historyjobnotes_lb_div" />
		</div>
	</groupbox>
	<separator height="3px" />
	<hbox>
		<button id="prev_jn_btn" label="View previous note" sclass="k9" onClick="jobnoteshistory_viewprev_clicker()" />
		<button label="Close" onClick="jobnotes_history_popup.close()" sclass="k9" />
	</hbox>
</popup>

<popup id="viewprev_jn_popup">
	<groupbox>
		<caption label="Previous job-notes" />
		<textbox id="prevjn_tb" multiline="true" width="400px" height="50px" style="font-size:9px;padding:3px" />
	</groupbox>
</popup>

<!-- end of Job notes related popup -->

<popup id="cancelfolder_popup"> <!-- cancel folder popup -->
	<groupbox mold="3d" width="350px">
		<label id="cancelfolder_lbl" />
		<separator height="3px" />
		<label value="Cancel reason" sclass="k9" />
		<textbox id="cancelreason" sclass="k9" multiline="true" width="99%" height="40px" />
		<separator height="3px" />
		<hbox>
			<button label="Confirm cancel" sclass="k9" onClick="realCancelFolder()" />
			<button label="Close" sclass="k9" onClick="cancelfolder_popup.close()" />
		</hbox>
	</groupbox>
</popup> <!-- ENDOF cancel folder popup -->

<popup id="selectcustomer_popup"> <!-- select customer popup , to be used by searchSelectCustomer_v1.zs -->
<div sclass="shadowbox" style="background:#89afd5;">
	<hbox>
		<groupbox width="400px">
			<caption label="Search" />
			<hbox>
				<label value="Search text" sclass="k9" />
				<textbox id="cust_search_tb" width="150px" sclass="k9" />
				<button label="Find" sclass="k9" onClick="searchCustomers(local_callme)" />
			</hbox>
			<separator height="3px" />
			<div id="foundcustomer_holder" />
		</groupbox>
		<groupbox id="custinfo_gb" width="300px" >
			<caption label="Customer info" />
			<grid>
				<rows>
					<row>
						<label value="Company" sclass="k9" />
						<label id="cfind_company_lbl" sclass="k9" />
					</row>
					<row>
						<label value="Address1" sclass="k9" />
						<label id="cfind_address1_lbl" sclass="k9" />
					</row>
					<row>
						<label value="Address2" sclass="k9" />
						<label id="cfind_address2_lbl" sclass="k9" />
					</row>
					<row>
						<label value="Address3" sclass="k9" />
						<label id="cfind_address3_lbl" sclass="k9" />
					</row>
					<row>
						<label value="Contact " sclass="k9" />
						<label id="cfind_contact_lbl" sclass="k9" />
					</row>
					<row>
						<label value="Email" sclass="k9" />
						<label id="cfind_email_lbl" sclass="k9" />
					</row>
					<row>
						<label value="Tel" sclass="k9" />
						<label id="cfind_tel_lbl" sclass="k9" />
					</row>
					<row>
						<label value="Fax" sclass="k9" />
						<label id="cfind_fax_lbl" sclass="k9" />
					</row>
				</rows>
			</grid>
		</groupbox>

	</hbox>
	<separator height="3px" />
	<button label="X Close" sclass="k9" onClick="selectcustomer_popup.close()" />
</div>
</popup> <!-- ENDOF select customer popup -->

<popup id="doculink_popup"> <!-- documents popup -->
	<div width="400px">
		<include id="linkingdoc_include" src="alsglobal/doculink.zul"/>
		<separator height="5px" />
		<hbox>
			<button label="Close" onClick="showDocumentsList(selected_folderno); doculink_popup.close()" sclass="k9" />
		</hbox>
	</div>
</popup> <!-- ENDOF documents popup -->

<popup id="viewresults_popup"> <!-- view results popup -->
	<div style="background:#729fcf;padding:2px">
		<button label="X Close" sclass="k9" onClick="viewresults_popup.close()" />
		<label id="foldercaption_lbl" style="font-weight:bold;color:#ffffff" />
		<label id="companyname_lbl" style="font-weight:bold;color:#ffffff" />
	</div>
	<separator height="2px" />
	<div id="foldertests_holder" width="520px" height="550px" style="border:1px solid gray;overflow:auto;padding:2px;" />
</popup> <!-- ENDOF view results popup -->

<popup id="loadfilterspop">
	<div sclass="shadowbox" style="background:#565B73" width="500px">
		<grid sclass="GridLayoutNoBorder">
			<rows>
				<row style="background:#565B73" spans="2,1">
					<separator />
					<button label="Dig by PKD" sclass="k9" onClick="loadFoldersList(5)" />
				</row>
				<row style="background:#565B73">
					<label value="Sample marking" sclass="k9b" />
					<textbox id="bysampmarking_tb" sclass="k9" width="98%" />
					<button label="Find" sclass="k9" onClick="loadFoldersList(8)" />
				</row>
				<row style="background:#565B73">
						<label value="ASMA Project" sclass="k9b" />
						<combobox id="customer_po" sclass="k9">
							<comboitem label="RIVER CONTRACT" />
							<comboitem label="ROL" />
							<comboitem label="PUTRAJAYA" />
							<comboitem label="IND MONITORING" />
						</combobox>
						<button label="by ASMA" sclass="k9" onClick="loadFoldersList(10)" />
				</row>
				<row style="background:#565B73">
					<label value="Track.Flag" sclass="k9b" />
					<listbox id="track_flag" mold="select" sclass="k9" />
					<button label="by TF" sclass="k9" onClick="loadFoldersList(11)" />
				</row>
				<row style="background:#565B73">
					<label value="By job-hold stat" sclass="k9b" />
					<listbox id="jobhold_status" mold="select" sclass="k9" />
					<button label="Dig" sclass="k9" onClick="loadFoldersList(12)" />
				</row>
				<row style="background:#565B73">
					<separator />
					<listbox id="share_sample" mold="select" sclass="k9" />
					<zscript>
						luhand.populateListbox_ByLookup(share_sample,"SHARESAMPLE_DEFS",2);
						//lbhand.populateDropdownListbox(share_sample,sharesamplechop);
					</zscript>
					<button label="Dig by share-samples" sclass="k9" onClick="loadFoldersList(4)" />
				</row>
				<row style="background:#565B73">
					<separator />
					<div id="salesman_holder" />
					<button label="Dig by salesman" sclass="k9" onClick="loadFoldersList(6)" />
				</row>
				<row style="background:#565B73">
					<separator />
					<div id="customerterms_holder" />
					<button label="Dig by credit-terms" sclass="k9" onClick="loadFoldersList(7)" />
				</row>
				<row style="background:#565B73">
					<separator />
					<div id="custcat_holder" />
					<button label="Dig by cust-category" sclass="k9" onClick="loadFoldersList(9)" />
				</row>
			</rows>
		</grid>
	</div>
</popup>

<popup id="adminpop">
	<div sclass="shadowbox" style="background:#ee1100">
		<vbox>
			<button id="cancelfolder_btn" label="Cancel folder" sclass="k9" onClick="cancelFolder()" />
			<button id="ass_customer_btn" label="Change customer" sclass="k9" onClick="selectcustomer_popup.open(self)" />
			<button label="Clear sudah-terima" sclass="k9" onClick="generalFunc(7)" />
			<button label="Clear SRN-date" sclass="k9" onClick="generalFunc(9)" />
			<!-- <button label="Notify unmod cashfolder" sclass="k9" onClick="admin_NotifyCashFolders()" /> -->
			<!-- <button id="sendsrn_button" label="sendSRN" visible="false" sclass="k9" onClick="sendSRN_email()" /> -->
		</vbox>
	</div>
</popup>

<popup id="utilitiespop">
	<div sclass="shadowbox" style="background:#565B73">
		<vbox>
		<button label="Print SRA" sclass="k9" onClick="generalFunc(4)" />
		<button label="Email SRA" sclass="k9" onClick="generalFunc(11)" />
		<button label="Generate Draft-Report" sclass="k9" onClick="generalFunc(3)" />
		<button id="exportlist_btn" label="Export list to Excel" sclass="k9" onClick="kasiExport_clicker()" />
		</vbox>
	</div>
</popup>

<popup id="lilhelp">
	<div sclass="shadowbox" style="background:#565B73" width="200px">
		<label style="font-size:8px;color:#eeeeee" multiline="true">
		( T.COA = Terima.COA date, F.Status = Folder.Status, HOLD=HOLD.JOB, SC=SampleCount, LC=LabComment, Subc=Subcon, SRA=emailSRN )
		</label>
	</div>
</popup>

<style src="/real-world.css" />
<style>
.GridLayoutNoBorder tr.z-row td.z-row-inner, tr.z-row .z-cell, div.z-grid
{
border: none; overflow: hidden; zoom: 1;
border-top: none; border-left: none; border-right: none; border-bottom: none;
}
</style>

<div width="1200px">
<panel id="${MYPANEL}" title="${MYTITLE} ${MYVERSION}" border="none" collapsible="true" closable="true">
<panelchildren style="background:#990D2A">
	<datebox id="hiddendatebox" format="yyyy-MM-dd" visible="false" onCreate="kiboo.setTodayDatebox(self)" />

	<div sclass="shadowbox" style="background:#565B73">
		<hbox>
			<label value="Start" sclass="k9b" />
			<datebox id="startdate" format="yyyy-MM-dd" style="font-size:9px" onCreate="kiboo.setTodayDatebox(self)" />
			<label value="End" sclass="k9b" />
			<datebox id="enddate" format="yyyy-MM-dd" style="font-size:9px" onCreate="kiboo.setTodayDatebox(self)" />
			<textbox id="customer_tb" sclass="k9" />
			<button label="Find/Load" sclass="k9mo" onClick="loadFoldersList_NG(1)" />

			<textbox id="byfolder_tb" sclass="k9" width="70px" />
			<button label="by folder" sclass="k9mo" onClick="loadFoldersList(2)" />
			<textbox id="bysampleid_tb" sclass="k9" width="70px" />
			<button label="by sample-id" sclass="k9mo" onClick="loadFoldersList(3)" />
			
			<button label="Filters" sclass="k9mo" onClick="loadfilterspop.open(self)" />
			<button label="Dig quotation" sclass="k9mo" onClick="digquotation_popup.open(self)" />
			<button label="Export EXCEL" sclass="k9mo" onClick="expfoldersexcel()" />
			<button id="admin_b" label="ADMIN" sclass="k9mo" style="color:#ff0000" visible="false" onClick="adminpop.open(self)" />
		</hbox>
		<hbox>
			<label style="font-size:8px;color:#eeeeee">
			Will only load LOGGED or COMMITTED folders - If you cannot find the folder here, most probably it is in DRAFT.
			(Max. 200 folders per click)
			</label>
		</hbox>
	</div>
	<separator height="3px" />

	<div id="mainlongkang" >
		<div sclass="shadowbox" style="background:#565B73">
			<hbox>
				<vbox>
					<hbox>
						<label value="Reset Share-Sample" sclass="k9b" />
						<listbox id="share_sample2" mold="select" sclass="k9" />
						<button id="resetsharesample_butt" label="Change" sclass="k9mo" disabled="true" onClick="generalFunc(1)" />

						<div id="whosetholdstatus" visible="false">
							<label value="Hold-status" sclass="k9b" />
							<listbox id="set_jobhold_status" mold="select" sclass="k9" />
							<button label="Set hold" sclass="k9mo" onClick="generalFunc(12)" />
						</div>
					</hbox>
					<hbox>
						<div style="background:#FAC116">
							<label value="Found" />
							<label id="numofsamples_lbl" />
						</div>

						<div style="background:#cd2467">
							<label value="HOLD" />
							<label id="jobhold_count_lbl" style="color:#ffffff;font-weight:bold"/>
						</div>

						<div style="background:#F74623">
							<label value="OVERDUES" />
							<label id="overdue_count_lbl" style="color:#ffffff;font-weight:bold"/>
						</div>

						<div style="background:#AEF520">
							<label value="REL" />
							<label id="released_count_lbl" style="color:#222222;font-weight:bold"/>
						</div>

						<div style="background:#FAC116">
							<label value="WIP" />
							<label id="wip_lbl" />
						</div>
					</hbox>
				</vbox>

				<grid sclass="GridLayoutNoBorder" width="700px">
					<rows>
						<row style="background:#565B73">
							<button label="Set job as PKD samples" sclass="k9mo" width="100%" onClick="generalFunc(2)" />
							<button label="Set pre-paid job" sclass="k9mo" width="100%" onClick="generalFunc(10)" />
							<button id="terimacoa_btn" label="Sudah terima COA" width="100%" sclass="k9mo" onClick="generalFunc(6)" visible="false" />
							<button label="Utilities" sclass="k9mo" width="100%" onClick="utilitiespop.open(self)" />
							<button label="Folder/CashAcct/Documents" sclass="k9" width="100%" onClick="showFolderMetadata()" />
							<button label="HELP" sclass="k9" onClick="lilhelp.open(self)" />
						</row>
						<row style="background:#565B73" >
							<button label="View results" sclass="k9mo" width="100%" onClick="generalFunc(8)" />
							<button label="Lab Comments" sclass="k9mo" width="100%" onClick="showLabComments(global_selected_folderno);labcomment_popup.open(self)" />
							<button label="Subcontract" sclass="k9mo" width="100%" onClick="viewSubcontract(self)" />
							<button id="picksamp_butt" label="Samples pickup" sclass="k9mo" width="100%" onClick="viewSamplesPickup()" />
							<button id="persampleshare_butt" label="Per-sample Share" sclass="k9mo" width="100%" onClick="viewPerSampleShare()" />
							<separator />
						</row>
					</rows>
				</grid>
			</hbox>
		</div>
		<vbox>
			<div id="folderworkbutts" visible="false" />

			<div id="foldermeta_area" sclass="shadowbox" style="background:#4C99A6" visible="false"> <!-- folder metadata area -->
				<hbox>
					<button label="More folder details" sclass="k9" onClick="generalFunc(5)" />

					<groupbox width="400px">
						<div id="doculist_holder" />
						<separator height="3px" />
						<button label="View document" sclass="k9" onClick="viewDocument()" />
						<button id="viewdoculinks_btn" label="Upload COC/PO/Documents" onClick="doViewDoculinkPopup()" sclass="k9" />
						<!-- <button id="sendemail_doc_btn" label="E-Mail" sclass="k9" onClick="sendDocViaEmail_clicker()" visible="false" /> -->
					</groupbox>

					<div id="cashdet_holder" />

					<groupbox>
						<caption label="Job Notes" />
						<div id="jobnotes_found_div" />
						<separator height="3px" />
						<grid>
							<columns>
								<column label="" width="100px" />
								<column label="" />
							</columns>
							<rows>
								<row>
									<label value="Job notes" sclass="k9" />
									<textbox id="jobnotes_tb" sclass="k9" multiline="true" width="300px" height="100px" />
								</row>
							</rows>
						</grid>
						<separator height="3px" />
						<hbox>
							<button label="Save notes" sclass="k9" onClick="saveUpdateJobNotes()" />
							<button id="noteshistory_btn" label="Notes history" sclass="k9" onClick="jobNotesHistory_clicker()" />
						</hbox>
					</groupbox>
				</hbox>

			</div> <!-- ENDOF folder metadata area -->
			<separator height="3px" />

			<div id="folderworkarea" visible="false"> <!-- search results box and tests box -->
				<div id="folders_searchdiv" />
			</div> <!-- ENDOF search results box and tests box -->
		</vbox>
	</div>
	<div id="kasiexport_holder" visible="false" />

<zscript>
<![CDATA[

populateSalesman_dropdown(salesman_holder); // repeatstuff.zs
populateCustomerTerms_dropdown(customerterms_holder);

luhand.populateDynamic_Mysoft(5, custcat_holder,"custcat_lb", "font-size:9px");

luhand.populateListbox_ByLookup(track_flag,"REGSAMP_FOLDER_FLAGS",2);
luhand.populateListbox_ByLookup(jobhold_status,"REGSAMP_HOLD_SAMPLES",2);
luhand.populateListbox_ByLookup(set_jobhold_status,"REGSAMP_HOLD_SAMPLES",2);

luhand.populateListbox_ByLookup(persampshare,"PER_SAMPLE_SHARE",2);
//lbhand.populateDropdownListbox(share_sample2,sharesamplechop);
luhand.populateListbox_ByLookup(share_sample2,"SHARESAMPLE_DEFS",2);

track_flag.setSelectedIndex(0);
jobhold_status.setSelectedIndex(0);
set_jobhold_status.setSelectedIndex(0);

documentLinkProp.document_idprefix = "DOCS";
setDocumentLink_DynamicProperty(linkingdoc_include, documentLinkProp, useraccessobj);

// 31/05/2013: who can change share-sample flag
if(sechand.allowedUser(useraccessobj.username,"RESET_SHARESAMPLE_USERS")) resetsharesample_butt.setDisabled(false);

// 06/09/2012: chk if user can see "Terima COA" button
if(sechand.allowedUser(useraccessobj.username,"SUDAHTERIMACOA_BUTTON")) terimacoa_btn.setVisible(true);

// 13/05/2013: chk who can set jobhold_status flag
if(sechand.allowedUser(useraccessobj.username,"WHOSET_JOBHOLD_STATUS")) whosetholdstatus.setVisible(true);

if(useraccessobj.accesslevel == 9 || sechand.validSupervisor(useraccessobj.username,supervisors))
{
	//adminstuffy.setVisible(true);
	admin_b.setVisible(true);
	terimacoa_btn.setVisible(true);

//	sendemail_doc_btn.setVisible(true);
//	sendsrn_button.setVisible(true);
// width="1190px" height="550px" style="border:1px solid gray;overflow:auto;padding:2px;"
}


]]>
</zscript>

</panelchildren>
</panel>
</div>
</zk>
